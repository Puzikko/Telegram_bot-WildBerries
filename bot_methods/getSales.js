const TelegramApi = require("node-telegram-bot-api");
const { token } = require("../env");
const { awaitResolve } = require("../general/awaitResolve");
const { axiosInstance } = require("../api/axios_instance");

const bot = new TelegramApi(token);

const getSales = async (chatId, date) => { //! –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–¥–∞–∂

    const response = await axiosInstance.get('sales?flag=1&dateFrom=' + date)//? –∑–∞–ø—Ä–æ—Å –æ—Ç WB

    const arrayOfSales = await response.data.map(obj => {
        delete obj.lastChangeDate;//?vvv
        delete obj.gNumber;
        delete obj.isSupply;
        delete obj.isRealization;
        delete obj.oblastOkrugName;
        delete obj.odid;
        delete obj.sticker;
        delete obj.srid;//? ^^^^^^ —É–¥–∞–ª–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –∫–ª—é—á–µ–π —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏
        return obj; //? –≤–æ–∑–≤—Ä–∞—Ç –æ–±—ä–µ–∫—Ç–∞
    });
    // console.log(arrayOfSales)
    if (arrayOfSales.length > 0) {
        awaitResolve(chatId, arrayOfSales, translateSales, 5)//? –∫–∞—Å—Ç–æ–º–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
    } else { bot.sendMessage(chatId, '–ù–∞ —Å–µ–≥–æ–¥–Ω—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –Ω–µ—Ç.') };

};

module.exports.getSales = getSales;

const translateSales = {
    gNumber: '–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞',
    date: 'üìÖ üïî',
    supplierArticle: 'üéÅ',
    techSize: '–†–∞–∑–º–µ—Ä —Ç–æ–≤–∞—Ä–∞',
    barcode: '–ë–∞—Ä-–∫–æ–¥',
    totalPrice: 'üí≤',
    priceWithDiscount: 'üí∞',
    discountPercent: 'üìâ, %',
    isSupply: '–î–æ–≥–æ–≤–æ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏',
    isRealization: '–î–æ–≥–æ–≤–æ—Ä —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏',
    promoCodeDiscount: '–°–∫–∏–¥–∫–∞ –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É',
    warehouseName: 'üöö',
    countryName: '–°—Ç—Ä–∞–Ω–∞',
    oblastOkrugName: '–û–∫—Ä—É–≥',
    regionName: '–†–µ–≥–∏–æ–Ω',
    incomeID: '–ù–æ–º–µ—Ä –ø–æ—Å—Ç–∞–≤–∫–∏ (–æ—Ç –ø—Ä–æ–¥–∞–≤—Ü–∞ –Ω–∞ —Å–∫–ª–∞–¥)',
    saleID: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ–¥–∞–∂–∏/–≤–æ–∑–≤—Ä–∞—Ç–∞.',
    odid: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫–∞–∑–∞',
    spp: '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–∞—è —Å–∫–∏–¥–∫–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–≥–æ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è',
    forPay: '‚ôªÔ∏è',
    finishedPrice: '–§–∞–∫—Ç–∏—á–µ—Å–∫–∞—è —Ü–µ–Ω–∞ –∑–∞–∫–∞–∑–∞ —Å —É—á–µ—Ç–æ–º –≤—Å–µ—Ö —Å–∫–∏–¥–æ–∫',
    priceWithDisc: '–¶–µ–Ω–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–π —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ forpay',
    nmId: '–ê—Ä—Ç–∏–∫—É–ª WB',
    subject: '–ü—Ä–µ–¥–º–µ—Ç',
    category: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
    brand: '–ë—Ä–µ–Ω–¥',
    IsStorno: '–î–ª—è —Å—Ç–æ—Ä–Ω–æ-–æ–ø–µ—Ä–∞—Ü–∏–π 1, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö 0',
    sticker: '–¶–∏—Ñ—Ä–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä–∞',
    srid: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞'
};